plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'application'
    id 'com.google.cloud.tools.jib' version '2.6.0'
    //id "com.github.spotbugs" version "4.7.3"
    id 'net.researchgate.release' version '2.8.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "org.sonarqube" version "3.3"
}


jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacoco")
}



repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.11.2'

    // https://mvnrepository.com/artifact/com.sun.codemodel/codemodel
    compile group: 'com.sun.codemodel', name: 'codemodel', version: '2.6'

    // https://mvnrepository.com/artifact/org.springframework/spring-context
    compile group: 'org.springframework', name: 'spring-context', version: '5.2.9.RELEASE'

    // https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

    // https://mvnrepository.com/artifact/org.springframework/spring-beans
    compile group: 'org.springframework', name: 'spring-beans', version: '5.2.9.RELEASE'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    compile 'org.slf4j:slf4j-log4j12:1.7.32'


    compile 'org.apache.ant:ant:1.10.11'

    compile 'org.apache.commons:commons-text:1.9'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'


    compile 'org.reflections:reflections:0.9.12'
    compile 'net.sf.saxon:Saxon-HE:10.5'


    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.17.2'


    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'


    testImplementation('org.junit.jupiter:junit-jupiter:5.7.2')

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.2'


    // https://mvnrepository.com/artifact/commons-io/commons-io
    testImplementation group: 'commons-io', name: 'commons-io', version: '2.7'

    //spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

/*
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}
*/


mainClassName = "pro.akvel.spring.converter.Convertor"

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
}

sonarqube {
    properties {
        property "sonar.projectKey", "Akvel_spring-xml-to-java-converter"
        property "sonar.organization", "akvel"
        property "sonar.host.url", "https://sonarcloud.io"
        property 'sonar.jacoco.reportPath', "${buildDir}/jacoco/test.exec"
        property 'sonar.coverage.exclusions', ['**/Main*']
    }
}

jar.dependsOn test